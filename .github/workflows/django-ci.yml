name: Pipeline Python + SonarQube

on:
  push:
    branches: [ master]
  pull_request:
    branches: [ master]

jobs:
  test-et-analyse:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:community
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -f http://localhost:9000/api/system/status || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=20

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # nécessaire pour les analyses PR

      - name: Installer Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Installer les dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # ou ton fichier de dépendances
          pip install pytest pytest-cov

      - name: Exécuter les tests avec couverture
        run: |
          pytest --cov=rsa_app --cov-report=xml --cov-report=term

      - name: Télécharger sonar-scanner
        run: |
          mkdir -p ${{ runner.temp }}/sonarscanner
          cd ${{ runner.temp }}/sonarscanner
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-7.1.0.4889-linux-x64.zip
          unzip sonar-scanner-cli-7.1.0.4889-linux-x64.zip
          echo "${{ runner.temp }}/sonarscanner/sonar-scanner-7.1.0.4889-linux-x64/bin" >> $GITHUB_PATH

      - name: Analyse SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=rsa_project \
            -Dsonar.projectName="rsa_project" \
            -Dsonar.sources=rsa_app \
            -Dsonar.tests=rsa_app/tests \
            -Dsonar.exclusions=rsa_app/tests/** \
            -Dsonar.python.coverage.reportPaths=coverage.xml \
            -Dsonar.host.url=http://sonarqube:9000 \
            -Dsonar.login=$SONAR_TOKEN