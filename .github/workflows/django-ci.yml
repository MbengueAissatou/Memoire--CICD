name: Django CI + SonarQube with ngrok

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django pyngrok

      - name: Apply migrations
        run: |
          python manage.py makemigrations
          python manage.py migrate

      - name: Prepare report directories
        run: mkdir -p report/unit report/integration

      - name: Run Unit Tests
        run: |
          pytest rsa_app/tests -m unit --junitxml=report/unit/python-unit.xml || echo "No unit tests found"

      - name: Run Integration Tests
        run: |
          pytest rsa_app/tests -m integration --junitxml=report/integration/python-integration.xml || echo "No integration tests found"

      - name: Upload Unit Test Results
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: report/unit/python-unit.xml

      - name: Upload Integration Test Results
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: report/integration/python-integration.xml

  sonar:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install ngrok
        run: |
          pip install pyngrok

      - name: Download and extract SonarQube
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-10.4.1.88267.zip
          unzip sonarqube-10.4.1.88267.zip
          mv sonarqube-10.4.1.88267 sonarqube

      - name: Start SonarQube and ngrok
        env:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
        run: |
          # Démarrage de SonarQube
          nohup ./sonarqube/bin/linux-x86-64/sonar.sh start &

          echo "⏳ Attente du démarrage de SonarQube..."
          for i in {1..30}; do
            if curl -s http://localhost:9000 > /dev/null; then
              echo "✅ SonarQube est prêt !"
              break
            fi
            echo "En attente ($i/30)..."
            sleep 10
          done

          # Configuration de ngrok
          python -c "from pyngrok import conf; conf.get_default().auth_token = '${NGROK_AUTHTOKEN}'"

          # Démarrage de ngrok et récupération de l'URL
          NGROK_URL=$(python -c "from pyngrok import ngrok; print(ngrok.connect(9000, 'http').public_url)")
          echo "🌍 SonarQube accessible via : $NGROK_URL"
          echo "SONAR_HOST_URL=$NGROK_URL" >> $GITHUB_ENV

      - name: Run SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        with:
          args: >
            -Dsonar.projectKey=rsa_project
            -Dsonar.projectName=rsa_project
            -Dsonar.python.version=3.11
            -Dsonar.sources=.
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
